[{"C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\index.js":"1","C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\App.js":"2","C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\object\\Box.js":"3","C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\lighting\\Lighting.js":"4","C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\terrain\\Terrain.js":"5","C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\stats\\Stats.js":"6"},{"size":149,"mtime":1608777698567,"results":"7","hashOfConfig":"8"},{"size":632,"mtime":1608783137115,"results":"9","hashOfConfig":"8"},{"size":1068,"mtime":1608782904435,"results":"10","hashOfConfig":"8"},{"size":796,"mtime":1608783166660,"results":"11","hashOfConfig":"8"},{"size":479,"mtime":1608783016318,"results":"12","hashOfConfig":"8"},{"size":709,"mtime":1608782791129,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11sxunv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\index.js",[],["30","31"],"C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\App.js",[],"C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\object\\Box.js",[],"C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\lighting\\Lighting.js",["32"],"import React, { useRef } from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = props => {\r\n  return (\r\n    <>\r\n      <fog attach=\"fog\" args={['white', 0, 40]} />\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[2.5, 8, 5]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <ambientLight intensity={0.4} />\r\n      <directionalLight\r\n        castShadow\r\n        position={[2.5, 8, 5]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n      <pointLight position={[0, -10, 0]} intensity={1.5} />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\terrain\\Terrain.js",["33","34"],"import React, { useEffect, useRef } from 'react'\r\nimport * as THREE from 'three'\r\n\r\nexport const Terrain = () => {\r\n  const ref = useRef()\r\n  useEffect(() => {}, [])\r\n  return (\r\n    <>\r\n      <mesh\r\n        rotation={[-Math.PI / 2, 0, 0]}\r\n        position={[0, -0.5, 0]}\r\n        receiveShadow\r\n      >\r\n        <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n        <shadowMaterial attach=\"material\" transparent opacity={0.4} />\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\r3f-starter-app\\src\\stats\\Stats.js",["35"],"import { useState, useEffect } from 'react'\r\nimport { addEffect, addAfterEffect } from 'react-three-fiber'\r\n// @ts-ignore\r\nimport StatsImpl from 'stats.js'\r\n\r\nexport function Stats({ showPanel = 0, className, parent }) {\r\n  const [stats] = useState(() => new StatsImpl())\r\n  useEffect(() => {\r\n    const node = (parent && parent.current) || document.body\r\n\r\n    stats.showPanel(showPanel)\r\n    node.appendChild(stats.dom)\r\n\r\n    if (className) stats.dom.classList.add(className)\r\n\r\n    const begin = addEffect(() => stats.begin())\r\n    const end = addAfterEffect(() => stats.end())\r\n\r\n    return () => {\r\n      node.removeChild(stats.dom)\r\n      begin()\r\n      end()\r\n    }\r\n  }, [parent])\r\n  return null\r\n}\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":23},{"ruleId":"40","severity":1,"message":"44","line":2,"column":13,"nodeType":"42","messageId":"43","endLine":2,"endColumn":18},{"ruleId":"40","severity":1,"message":"45","line":5,"column":9,"nodeType":"42","messageId":"43","endLine":5,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":24,"column":6,"nodeType":"48","endLine":24,"endColumn":14,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'THREE' is defined but never used.","'ref' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'className', 'showPanel', and 'stats'. Either include them or remove the dependency array.","ArrayExpression",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [className, parent, showPanel, stats]",{"range":"55","text":"56"},[680,688],"[className, parent, showPanel, stats]"]